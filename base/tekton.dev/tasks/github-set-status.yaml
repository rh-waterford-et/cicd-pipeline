apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: github-set-status
spec:
  params:
    - name: repo
      default: ""
      type: string
    - name: status
      default: ""
      type: string
    - name: commit-sha
      default: ""
      type: string

  steps:
    - image: 'quay.io/luzuccar/rh-waterford-golang:v1.24.5'
      name: set-status
      env:
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              name: github-token  
              key: token
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 1Gi
      script: |
        #!/usr/bin/env bash
        set -euxo pipefail
    
        cd /home/1001/src

        STATUS_MSG="the cicd build failed"
        if [ "$(params.status)" == "success" ];
        then
          STATUS_MSG="the cicd build passed"
        fi

        tee payload.json <<EOF
        {
          "state": "$(params.status)", 
          "target_url": "https://pr-opened-webhook-rh-waterford-et.apps.ocp-rh-ai.waltoninstitute.ie/", 
          "description": " ${STATUS_MSG} !", 
          "context": "openshift-pipelines/cicd"
        }
        EOF

        cat payload.json

        echo -e "$(params.repo)"
        REPO_NAME=$(echo -e "$(params.repo)" | rev | cut -d/ -f1 | rev | cut -d. -f1)
        OWNER=$(echo -e "$(params.repo)" | rev | cut -d/ -f2 | rev)
        echo -e "repo  : ${REPO_NAME}"
        echo -e "owner : ${OWNER}"
        UPDATED_TOKEN=$(echo $TOKEN | tr -d '\012\015')

        # curl -X GET "https://api.github.com/octocat" -H "Authorization: Bearer ${UPDATED_TOKEN}" -H "X-GitHub-Api-Version: 2022-11-28"

        curl -L -s -d"@payload.json" -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${UPDATED_TOKEN}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/${OWNER}/${REPO_NAME}/statuses/$(params.commit-sha)" --http1.1
        
      volumeMounts:
        - name: $(workspaces.ws.volume)
          mountPath: /home/1001/src
        
  workspaces:
    - mountPath: /src
      name: ws
